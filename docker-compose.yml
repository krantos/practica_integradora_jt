version: "3"
services:
    webserver:
        image: nginx:stable-alpine3.20-perl
        container_name: webserver
        restart: always
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./:/var/www/jobtracker/
            - ./docker/default.conf:/etc/nginx/conf.d/default.conf
        networks:
            - app-network

    app:
        build:
            dockerfile: ./docker/Dockerfile
        restart: always
        volumes:
            - ./:/var/www/jobtracker/
        networks:
            - app-network

    datab:
        image: postgres:12.20-alpine3.20
        restart: always
        shm_size: 128mb
        environment:
            PGDATA: "/var/linb/postgresql/data/pgdata"
            POSTGRES_DB: "${DB_DATABASE}"
            POSTGRES_PASSWORD: "${DB_PASSWORD}"
            POSTGRES_USER: "${DB_USERNAME}"
        ports:
            - "5432:5432"
        volumes:
            - pgdata:/var/linb/postgresql/data
        networks:
            - app-network

    yarn:
        image: node:22.9.0-alpine
        volumes:
            - .:/var/www
        entrypoint: ["yarn"]
        working_dir: /var/www
    
    vite: 
        image: node:22.9.0-alpine
        volumes:
            - .:/var/www
        entrypoint: ["yarn", "dev"]
        working_dir: /var/www
        ports:
            - 5173:5173
        networks:
            - app-network
    
    artisan:
        build:
            context: .
            dockerfile: ./docker/Dockerfile
        volumes:
            - .:/var/www
        working_dir: /var/www
        depends_on:
            - datab
        entrypoint: ["php", "/var/www/artisan"]
        networks:
            - app-network

    test:
      image: php:8.3-rc-fpm-alpine
      volumes:
        - .:/app
      working_dir: /app
      entrypoint: ["sh", "./docker/test_setup.sh"]

networks:
    app-network:
        driver: bridge

volumes:
    pgdata:
